{
  "stats": {
    "suites": 2,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2024-03-10T13:57:06.525Z",
    "end": "2024-03-10T13:57:09.743Z",
    "duration": 3218,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ea5c0acd-cbd3-4c60-b859-225f2bf85486",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "16b74f26-a612-4bbe-a338-df3a4630188a",
          "title": "our new test Claculator",
          "fullFile": "/Users/Slavva/Documents/it-academy/it-academy-shymchonak/Tries/unittest/test/testCalculator.spec.js",
          "file": "/test/testCalculator.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"our new test Claculator\"",
              "fullTitle": "our new test Claculator \"before all\" hook in \"our new test Claculator\"",
              "timedOut": null,
              "duration": 2,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "console.log('Before Claculator')",
              "err": {},
              "uuid": "a5638e2a-349a-4ee4-a737-b40c275b5c7e",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"our new test Claculator\"",
              "fullTitle": "our new test Claculator \"before each\" hook in \"our new test Claculator\"",
              "timedOut": null,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "console.log('Before each Claculator')",
              "err": {},
              "uuid": "48f09422-ccd4-450b-afb9-490db076178a",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"our new test Claculator\"",
              "fullTitle": "our new test Claculator \"after all\" hook in \"our new test Claculator\"",
              "timedOut": null,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "console.log('After Claculator')",
              "err": {},
              "uuid": "ff44bf89-b2ec-4103-ac06-f3a9fd493397",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"our new test Claculator\"",
              "fullTitle": "our new test Claculator \"after each\" hook in \"our new test Claculator\"",
              "timedOut": null,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "console.log('After each Claculator')",
              "err": {},
              "uuid": "e42a32c4-872c-421a-8669-7ccabbfe4900",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should 10 equal 10 Claculator",
              "fullTitle": "our new test Claculator should 10 equal 10 Claculator",
              "timedOut": null,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(10).to.equal(10)",
              "err": {},
              "uuid": "83add71c-c731-4024-a4b5-adcc4512ce23",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return \"Hello Dasha\" if attribute not pass in function Claculator",
              "fullTitle": "our new test Claculator should return \"Hello Dasha\" if attribute not pass in function Claculator",
              "timedOut": null,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = greet();\nexpect(result).to.equal('Hello Dasha')",
              "err": {},
              "uuid": "5b4479c0-95a6-4d22-9ef1-bc99e62558b6",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return \"Hello Igor\" if attribute not pass in function Claculator",
              "fullTitle": "our new test Claculator should return \"Hello Igor\" if attribute not pass in function Claculator",
              "timedOut": null,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = greet('Igor');\nexpect(result).to.equal('Hello Igor')",
              "err": {},
              "uuid": "4272e817-c96a-4345-9db3-85977da18dc1",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "83add71c-c731-4024-a4b5-adcc4512ce23",
            "5b4479c0-95a6-4d22-9ef1-bc99e62558b6",
            "4272e817-c96a-4345-9db3-85977da18dc1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "ec774875-1145-48d6-9ea0-e1a76b9f3644",
          "title": "our new test",
          "fullFile": "/Users/Slavva/Documents/it-academy/it-academy-shymchonak/Tries/unittest/test/test.spec.js",
          "file": "/test/test.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"our new test\"",
              "fullTitle": "our new test \"before all\" hook in \"our new test\"",
              "timedOut": null,
              "duration": 2,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "console.log('Before')",
              "err": {},
              "uuid": "0e927310-ffa4-4dfc-ad18-80eab0f087c4",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"our new test\"",
              "fullTitle": "our new test \"before each\" hook in \"our new test\"",
              "timedOut": null,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "console.log('Before each')",
              "err": {},
              "uuid": "99b7e119-dd06-41e3-a3cf-eddc579fd673",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"our new test\"",
              "fullTitle": "our new test \"after all\" hook in \"our new test\"",
              "timedOut": null,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "console.log('After')",
              "err": {},
              "uuid": "62b360bb-711b-4f60-a6d7-7017b57d90a2",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"our new test\"",
              "fullTitle": "our new test \"after each\" hook in \"our new test\"",
              "timedOut": null,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "console.log('After each')",
              "err": {},
              "uuid": "906b07f1-e0f2-4f24-b35e-49ae11b062b1",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should 10 equal 10",
              "fullTitle": "our new test should 10 equal 10",
              "timedOut": null,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(10).to.equal(10)",
              "err": {},
              "uuid": "60154d3f-28af-48cb-8058-8751b01e82c0",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return \"Hello Dasha\" if attribute not pass in function",
              "fullTitle": "our new test should return \"Hello Dasha\" if attribute not pass in function",
              "timedOut": null,
              "duration": 3002,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await pause()\nconst result = greet();\nexpect(result).to.equal('Hello Dasha')",
              "err": {},
              "uuid": "66558521-04a3-4446-851a-3313bf3b44de",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return \"Hello Igor\" if attribute not pass in function",
              "fullTitle": "our new test should return \"Hello Igor\" if attribute not pass in function",
              "timedOut": null,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = greet('Igor');\nexpect(result).to.equal('Hello Igor')",
              "err": {},
              "uuid": "c5819780-a3ec-44e8-b279-1d8e23e3cc37",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return different tests Dasha",
              "fullTitle": "our new test should return different tests Dasha",
              "timedOut": null,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = greet(testData.value);\nexpect(result).to.equal(testData.result)",
              "err": {},
              "uuid": "92d26871-4285-47d9-8b99-1634526f5b75",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return different tests undefined",
              "fullTitle": "our new test should return different tests undefined",
              "timedOut": null,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = greet(testData.value);\nexpect(result).to.equal(testData.result)",
              "err": {},
              "uuid": "c8e6f5cb-457c-43b0-aaae-229bda621f11",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return different tests null",
              "fullTitle": "our new test should return different tests null",
              "timedOut": null,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = greet(testData.value);\nexpect(result).to.equal(testData.result)",
              "err": {},
              "uuid": "0db791e8-4ae6-4536-9c08-0918d8ae61ee",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return different tests Igor",
              "fullTitle": "our new test should return different tests Igor",
              "timedOut": null,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = greet(testData.value);\nexpect(result).to.equal(testData.result)",
              "err": {},
              "uuid": "f86585d6-3dc5-45d3-827d-54eeaaba3027",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "60154d3f-28af-48cb-8058-8751b01e82c0",
            "66558521-04a3-4446-851a-3313bf3b44de",
            "c5819780-a3ec-44e8-b279-1d8e23e3cc37",
            "92d26871-4285-47d9-8b99-1634526f5b75",
            "c8e6f5cb-457c-43b0-aaae-229bda621f11",
            "0db791e8-4ae6-4536-9c08-0918d8ae61ee",
            "f86585d6-3dc5-45d3-827d-54eeaaba3027"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3003,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.3.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}